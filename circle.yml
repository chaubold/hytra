## Customize the test machine
machine:
  environment:
    CONDA_ROOT: /home/ubuntu/miniconda
    TEST_ENV_NAME: test-env
    TEST_ENV_PREFIX: /home/ubuntu/miniconda/envs/test-env
    PATH: ${TEST_ENV_PREFIX}/bin:${CONDA_ROOT}/bin:${PATH}
    PYTHONPATH: ${TEST_ENV_PREFIX}/lib/python3.6/site-packages/
  
## Customize dependencies
dependencies:
  cache_directories:
    - /home/ubuntu/miniconda

  override:
    # Download/install conda (if not already cached)
    - >
      if [[ ! -d ${CONDA_ROOT} ]]; then
          echo "Installing Miniconda...";
          wget --quiet https://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh &&
          bash Miniconda-latest-Linux-x86_64.sh -b -p ${CONDA_ROOT};
      else
          echo "Using cached Miniconda install";
      fi
    - >
      if [ ! -d ${TEST_ENV_PREFIX} ]; then
          conda create -y -n ${TEST_ENV_NAME} -c akreshuk -c conda-forge ilastik-deps-pc-headless python=3.6;
      else
          conda install -y -n ${TEST_ENV_NAME} -c akreshuk -c conda-forge ilastik-deps-pc-headless python=3.6;
      fi

    - >
      source /home/ubuntu/miniconda/bin/activate ${TEST_ENV_NAME};
      conda install -y configargparse -c conda-forge;
      conda remove -y vigra;
      conda install -y vigra -c akreshuk -c conda-forge;
      conda install -y dpct -c chaubold;
      conda remove -y tifffile;
      conda install -y tifffile -c akreshuk;

## Customize test commands
test:
  override:
    - > 
      source /home/ubuntu/miniconda/bin/activate ${TEST_ENV_NAME};
      nosetests tests
